/**
 * Catapult REST API Reference
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.7.15
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
/// <reference types="node" />
import http = require('http');
import { InlineResponse2001 } from '../model/inlineResponse2001';
import { RolesTypeEnum } from '../model/rolesTypeEnum';
import { Authentication, Interceptor } from '../model/models';
export declare enum ServiceRoutesApiApiKeys {
}
export declare class ServiceRoutesApi {
    protected _basePath: string;
    protected _defaultHeaders: any;
    protected _useQuerystring: boolean;
    protected authentications: {
        'default': Authentication;
    };
    protected interceptors: Interceptor[];
    constructor(basePath?: string);
    useQuerystring: boolean;
    basePath: string;
    defaultHeaders: any;
    setDefaultAuthentication(auth: Authentication): void;
    setApiKey(key: ServiceRoutesApiApiKeys, value: string): void;
    addInterceptor(interceptor: Interceptor): void;
    /**
     * Get drive by accountId.
     * @summary Get drive by accountId
     * @param accountId ID of a drive.
     */
    getAccountDrives(accountId: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: InlineResponse2001;
    }>;
    /**
     * Get drive by id.
     * @summary Get drive by id
     * @param accountId ID of a drive.
     */
    getDrive(accountId: string, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: Array<object>;
    }>;
    /**
     * Get drive by id and role.
     * @summary Get drive by id and role
     * @param accountId ID of a drive.
     * @param role Role in drive (owner or replicator).
     */
    getDriveByRole(accountId: string, role: RolesTypeEnum, options?: {
        headers: {
            [name: string]: string;
        };
    }): Promise<{
        response: http.IncomingMessage;
        body: Array<object>;
    }>;
}
